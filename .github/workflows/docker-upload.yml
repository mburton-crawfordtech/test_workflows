name: Publish Docker image to GitHub Packages

on:
  workflow_call:
    inputs:
      # pass in java version to allow different app requiring different java versions to 
      # reuse the same workflow, default to java 11
      java-version:
        required: false
        type: string
        default: '11'
      # working-directory is added to accommodate if the pom file is not in root.
      #  defaults to '.', current directory
      working-directory:
        required: false
        type: string
        default: '.'
      # allowing calling workflows to pass in maven parameter(s)
      # such as '-Dmaven.test.skip' for certain apps,
      # default to blank, not to skip test
      maven-params:
        required: false
        type: string
        default: ''
      # context-directory is the context (directory) used while building the Docker image.
      #  defaults to '.', current directory
      context-directory:
        required: false
        type: string
        default: '.'
    secrets:
      # allowing passing in secrets
      token:
        required: false

env:
  DOCKER_REGISTRY: ghcr.io

jobs:
  image_build:
    runs-on: ubuntu-latest

    # This sets the working directory at the job level,
    # defaults to "."
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}

    steps:
      # - run: echo '${{ toJSON(github) }}'

      # setup env vars
      ## Get the repository name and convert it to lowercase
      ##  because the Docker image name must be in all lowercase.
      - name: downcase GITHUB_REPOSITORY for Docker image name
        run: echo "IMAGE_NAME=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
      ## get just the project name part.
      - name: get project name
        run: echo "PROJECT=${IMAGE_NAME#*/}" >>${GITHUB_ENV}

      - name: Run Java Maven build action
        uses: mburton-crawfordtech/test_workflows/java-maven-build-action@main
        with:
          java-version: ${{ inputs.java-version }}
          maven-params: ${{ inputs.maven-params }}
          token: ${{ secrets.token }}  # for access to internal packages

      # Get the POM files version to be used as the Docker image version
      - name: Get Maven project version
        id: version
        run: |
          echo "version=$(mvn -q ${{ inputs.maven-params }} -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT
          echo ${{ steps.version.outputs.version }}

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Needed for Docker caching
      - uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.context-directory}}
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
            ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: echo image names
        run: |
          echo ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
          echo ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
