name: Common Java CI with Maven - deploy

on:
  workflow_call:
    inputs:
      # pass in java version to allow different app requiring different java versions to 
      # reuse the same workflow, default to java 11
      java-version:
        required: false
        type: string
        default: '11'
      # working-directory is added to accommodate if the pom file is not in root.
      #  defaults to '.', current directory
      working-directory:
        required: false
        type: string
        default: '.'
      # allowing calling workflows to pass in maven parameter(s)
      # such as '-Dmaven.test.skip' for certain apps,
      # default to blank, not to skip test
      maven-params:
        required: false
        type: string
        default: ''
    secrets:
      # allowing passing in secrets
      token:
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest

    # This sets the working directory at the job level,
    # defaults to "."
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}

    steps:
    # Checkout the code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Setup the JDK with caching for Maven
    - name: Set up JDK ${{ inputs.java-version }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ inputs.java-version }}
        distribution: 'temurin'
        cache: maven
        server-password: GITHUB_TOKEN_REF # env variable name for GitHub Personal Access Token
    # Just get the dependencies. Does this using the passed in token so it can access other private repos.
    - name: Build with Maven
      run: mvn --batch-mode dependency:resolve --file pom.xml
      shell: bash
      env:
        GITHUB_TOKEN_REF: ${{ secrets.token }}

    # re-run java setup to regenerate settings.xml
    # This will reset the permissions of GITHUB_TOKEN
    # Setup the JDK with caching for Maven
    - name: Set up JDK ${{ inputs.java-version }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ inputs.java-version }}
        distribution: 'temurin'
        cache: maven

    # Set user info - needed for the commit
    - name: Configure Git User
      run: |
        git config user.email "actions@github.com"
        git config user.name "GitHub Actions"

    - name: Publish to GitHub Maven Packages 
      run: mvn --batch-mode release:prepare release:perform ${{ inputs.maven-params }} --file pom.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
